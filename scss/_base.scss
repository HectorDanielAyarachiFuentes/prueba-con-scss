// scss/main.scss

// Importamos el módulo de matemáticas de SASS
@use "sass:math";

// --- CONFIGURACIÓN Y VARIABLES ---
$font-title: 'Orbitron', sans-serif;
$font-body: 'Roboto', sans-serif;

$color-bg: #010409;
$color-text: #c9d1d9;
$color-primary: #f72585;
$color-secondary: #7209b7;
$color-accent: #3a0ca3;
$color-highlight: #4cc9f0;

$iridescent-gradient: linear-gradient(135deg, $color-primary, $color-secondary, $color-accent, $color-highlight);
$animation-duration: 0.8s;
$animation-timing: cubic-bezier(0.16, 1, 0.3, 1);

@function to-rem($px) {
  @return math.div($px, 16) * 1rem;
}

// --- ESTILOS BASE ---
*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }
html { scroll-behavior: smooth; }
body {
  background-color: $color-bg;
  color: $color-text;
  font-family: $font-body;
  overflow-x: hidden;
  cursor: none; // Ocultamos el cursor real
}
a, button { cursor: none; } // Mantenemos el cursor personalizado en los links

// --- EFECTO DE CURSOR ---
.cursor-glow {
  position: fixed;
  z-index: 9999;
  width: 24px;
  height: 24px;
  border: 2px solid $color-primary;
  border-radius: 50%;
  pointer-events: none;
  transform: translate(-50%, -50%);
  transition: transform 0.2s ease-out, background-color 0.2s ease;
  &::after {
    content: '';
    position: absolute;
    width: 500px;
    height: 500px;
    background: radial-gradient(circle, rgba($color-primary, 0.1) 0%, transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    top: 50%; left: 50%;
    transition: transform 0.3s ease;
  }
}
// Efecto al pasar sobre links
a:hover ~ .cursor-glow, .btn:hover ~ .cursor-glow {
  transform: translate(-50%, -50%) scale(2.5);
  background-color: rgba($color-primary, 0.5);
}
// Efecto al hacer click (placeholder, se controla mejor con JS)
body:active .cursor-glow::after { transform: translate(-50%, -50%) scale(1); }

// --- ANIMACIONES DE SCROLL ---
[data-animate="fade-up"] {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity $animation-duration $animation-timing, transform $animation-duration $animation-timing;
}
[data-animate="bloom"] {
  clip-path: circle(0% at 50% 50%);
  transition: clip-path 1s $animation-timing;
}
.in-view {
  opacity: 1;
  transform: translateY(0);
  clip-path: circle(150% at 50% 50%);
}

// --- COMPONENTES Y LAYOUT ---
.main-header {
  position: fixed; top: 0; left: 0; width: 100%;
  padding: to-rem(24) to-rem(48); z-index: 100;
  .nav-logo {
    font-family: $font-title; font-weight: 900; font-size: to-rem(24);
    text-decoration: none; color: #fff; text-shadow: 0 0 10px $color-primary;
  }
}

.hero {
  height: 100vh; display: flex; justify-content: center; align-items: center;
  text-align: center; position: relative; overflow: hidden;
  &__title {
    font-family: $font-title; font-size: clamp(to-rem(48), 10vw, to-rem(120));
    font-weight: 900; color: #fff;
    .word {
      display: inline-block; transform: translateY(110%);
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
      span {
          display: block;
          transform: translateY(-110%);
          animation: reveal-word 1.5s $animation-timing forwards;
      }
      // ¡BUCLE SCSS para escalonar la animación!
      @for $i from 1 through 3 {
        &:nth-child(#{$i}) span { animation-delay: #{$i * 0.2}s; }
      }
    }
  }
  &__subtitle { margin: to-rem(20) 0; }

  // ¡LA MAGIA DE SCSS! Generamos los blobs de fondo con un bucle
  &__background-blobs {
    $blob-count: 7;
    @for $i from 1 through $blob-count {
      &::before {
        content: ''; position: absolute; z-index: -1;
        $size: random(15) + 20vw;
        width: $size; height: $size;
        background: $iridescent-gradient; background-size: 400%;
        border-radius: 100%; top: #{random(100)}vh; left: #{random(100)}vw;
        filter: blur(100px); opacity: 0.5;
        animation: move-blob 25s infinite alternate, gradient-shift 10s infinite alternate;
        animation-delay: #{-$i * 2}s;
      }
    }
  }
}

.features {
  padding: to-rem(120) to-rem(48); position: relative; z-index: 1;
  .section-title {
    font-family: $font-title; font-size: to-rem(56); text-align: center;
    margin-bottom: to-rem(80);
    span {
        display: inline-block; background: $iridescent-gradient;
        -webkit-background-clip: text; color: transparent; background-size: 200%;
        animation: gradient-shift 5s ease infinite;
    }
  }
  &__grid {
    display: grid; grid-template-columns: repeat(auto-fit, minmax(to-rem(280), 1fr));
    gap: to-rem(32);
  }
}

.card {
  background: linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0));
  border: 1px solid rgba(255, 255, 255, 0.1);
  padding: to-rem(32); border-radius: 16px; backdrop-filter: blur(10px);
  position: relative; overflow: hidden;
  h3 { font-family: $font-title; color: #fff; margin-bottom: to-rem(12); }
  &__glow {
    position: absolute; top: var(--y); left: var(--x);
    width: 250px; height: 250px;
    background: radial-gradient($color-highlight, transparent 80%);
    opacity: 0; transform: translate(-50%, -50%);
    transition: opacity 0.5s; pointer-events: none;
  }
  &:hover &__glow { opacity: 0.2; }
}

.btn--pulse {
  position: relative; display: inline-block;
  padding: to-rem(16) to-rem(32);
  border: 1px solid $color-primary; border-radius: 50px;
  color: #fff; text-decoration: none; font-weight: bold;
  overflow: hidden; transition: color 0.4s ease;
  z-index: 1;
  span { position: relative; z-index: 2; }
  &::before {
    content: ''; position: absolute; top: 0; left: 0;
    width: 100%; height: 100%; background-color: $color-primary;
    transform: scaleX(0); transform-origin: left;
    transition: transform 0.4s cubic-bezier(0.7, 0, 0.2, 1);
    z-index: 1;
  }
  &:hover {
    color: $color-bg;
    &::before { transform: scaleX(1); }
  }
}

// --- KEYFRAMES ---
@keyframes reveal-word { to { transform: translateY(0); } }
@keyframes move-blob {
  from { transform: translate(0, 0) rotate(0deg) scale(1); }
  to { transform: translate(random(10)-5vw, random(10)-5vh) rotate(180deg) scale(1.2); }
}
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}